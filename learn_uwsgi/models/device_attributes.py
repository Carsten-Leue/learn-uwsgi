# coding: utf-8

from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from .base_model_ import Model
from ..serialization import deserialize_model


class DeviceAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, group=None, mac_address=None):  # noqa: E501
        """DeviceAttributes - a model defined in OpenAPI

        :param name: The name of this DeviceAttributes.  # noqa: E501
        :type name: str
        :param group: The group of this DeviceAttributes.  # noqa: E501
        :type group: str
        :param mac_address: The mac_address of this DeviceAttributes.  # noqa: E501
        :type mac_address: str
        """
        self.openapi_types = {
            'name': str,
            'group': str,
            'mac_address': str
        }

        self.attribute_map = {
            'name': 'name',
            'group': 'group',
            'mac_address': 'macAddress'
        }

        self._name = name
        self._group = group
        self._mac_address = mac_address

    @classmethod
    def from_dict(cls, dikt) -> 'DeviceAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeviceAttributes of this DeviceAttributes.  # noqa: E501
        :rtype: DeviceAttributes
        """
        return deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this DeviceAttributes.


        :return: The name of this DeviceAttributes.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DeviceAttributes.


        :param name: The name of this DeviceAttributes.
        :type name: str
        """

        self._name = name

    @property
    def group(self):
        """Gets the group of this DeviceAttributes.


        :return: The group of this DeviceAttributes.
        :rtype: str
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this DeviceAttributes.


        :param group: The group of this DeviceAttributes.
        :type group: str
        """

        self._group = group

    @property
    def mac_address(self):
        """Gets the mac_address of this DeviceAttributes.


        :return: The mac_address of this DeviceAttributes.
        :rtype: str
        """
        return self._mac_address

    @mac_address.setter
    def mac_address(self, mac_address):
        """Sets the mac_address of this DeviceAttributes.


        :param mac_address: The mac_address of this DeviceAttributes.
        :type mac_address: str
        """

        self._mac_address = mac_address
